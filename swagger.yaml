swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account & Transaction Module
      summary: Get all accounts of the user
      description: Returns a list of user accounts
      produces:
        - application/json
      responses:
        "200":
          description: List of accounts
          schema:
            $ref: "#/definitions/AccountListResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Account & Transaction Module
      summary: Get account details
      description: Returns details of a specific account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
      produces:
        - application/json
      responses:
        "200":
          description: Account details
          schema:
            $ref: "#/definitions/AccountDetailResponse"
        "404":
          description: Account not found
        "500":
          description: Internal Server Error

  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Account & Transaction Module
      summary: Get all transactions of an account
      description: Returns list of transactions for a specific account, optionally filtered by month (e.g., 2025-05)
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: query
          name: month
          required: false
          type: string
          pattern: "^[0-9]{4}-(0[1-9]|1[0-2])$"
          description: Month to filter transactions (e.g., 2025-05)
      produces:
        - application/json
      responses:
        "200":
          description: List of transactions
          schema:
            $ref: "#/definitions/TransactionListResponse"
        "404":
          description: Account not found
        "500":
          description: Internal Server Error

    post:
      security:
        - Bearer: []
      tags:
        - Account & Transaction Module
      summary: Create a transaction
      description: Create a new transaction for a specific account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: body
          name: body
          required: true
          description: Transaction data to create
          schema:
            $ref: "#/definitions/TransactionCreate"
      produces:
        - application/json
      responses:
        "201":
          description: Transaction created
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid fields
        "500":
          description: Internal Server Error

  /accounts/{accountId}/transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Account & Transaction Module
      summary: Edit transaction note
      description: Modify the note of a transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          type: string
        - in: body
          name: body
          required: true
          description: New transaction note
          schema:
            $ref: "#/definitions/TransactionNoteUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid fields
        "404":
          description: Transaction not found

    delete:
      security:
        - Bearer: []
      tags:
        - Account & Transaction Module
      summary: Delete a transaction
      description: Delete a specific transaction from an account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction
      responses:
        "204":
          description: Transaction deleted successfully
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name

  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Account:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      balance:
        type: number
        format: float
      currency:
        type: string

  AccountListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: "#/definitions/Account"

  AccountDetailResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: "#/definitions/Account"

  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      amount:
        type: number
        format: float
      description:
        type: string
      type:
        type: string
        enum: [debit, credit]
      note:
        type: string

  TransactionListResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: "#/definitions/Transaction"

  TransactionNoteUpdate:
    type: object
    properties:
      note:
        type: string

  TransactionCreate:
    type: object
    required:
      - amount
      - date
      - description
      - type
    properties:
      amount:
        type: number
        format: float
      date:
        type: string
        format: date
      description:
        type: string
      type:
        type: string
        enum: [debit, credit]
      note:
        type: string
